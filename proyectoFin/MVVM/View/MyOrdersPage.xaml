<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodel="clr-namespace:proyectoFin.MVVM.ViewModel"
             xmlns:modelResponses="clr-namespace:Domain.Model.ApiResponses;assembly=Domain.Model"
             xmlns:converters="clr-namespace:proyectoFin.Converters"
             x:DataType="viewmodel:MyOrdersViewModel"
             x:Class="proyectoFin.MVVM.View.MyOrdersPage"
             Title="Mis Pedidos"
             BackgroundColor="#FFE7EA">

    <ContentPage.Resources>
        <converters:StringIsNullOrEmptyConverter x:Key="StringIsNullOrEmptyConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <!-- NO NECESITAMOS STRINGTOBOOLCONVERTER AQUÍ -->

        <Style TargetType="Border">
            <Setter Property="StrokeShape">
                <Setter.Value>
                    <RoundRectangle CornerRadius="10"/>
                </Setter.Value>
            </Setter>
            <Setter Property="StrokeThickness" Value="0"/>
            <Setter Property="BackgroundColor" Value="#FDF1EB"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="0,5"/>
        </Style>
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="BackgroundColor" Value="#FF8FAB"/>
            <Setter Property="TextColor" Value="#5C4033"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="HeightRequest" Value="40"/>
            <Setter Property="FontSize" Value="Small"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>
        <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
            <Setter Property="BackgroundColor" Value="#FF6F61"/>
            <Setter Property="TextColor" Value="#FFF5E1"/>
        </Style>
        <!-- Estilos para el texto de estado -->
        <Style x:Key="StatusLabelStyle" TargetType="Label">
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="HorizontalOptions" Value="End" />
            <Setter Property="VerticalOptions" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,0" />
            <Setter Property="TextColor" Value="#7A5E48" />
            <!-- Color por defecto (Marrón suave) -->
        </Style>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto,*,Auto,Auto"
          Padding="20">
        <Label Text="Historial de Pedidos"
               TextColor="#5C4033"
               FontSize="32"
               FontAttributes="Bold"
               Margin="0,0,0,20"/>

        <CollectionView Grid.Row="1"
                        ItemsSource="{Binding Orders}"
                        SelectionMode="None">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="modelResponses:PedidoOfertaResponse">
                    <Border>
                        <VerticalStackLayout Spacing="5">
                            <Grid ColumnDefinitions="*,Auto" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto" RowSpacing="5">
                                <Label Grid.Column="0" Text="{Binding RecetaNombre}" TextColor="#5C4033" FontSize="18" FontAttributes="Bold"/>

                                <!-- ¡CORRECCIÓN CLAVE AQUÍ! Aplicar DataTriggers para Texto y Color -->
                                <Label Grid.Column="1" Style="{StaticResource StatusLabelStyle}">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Estado}" Value="Oferta">
                                            <Setter Property="Text" Value="Oferta" />
                                            <Setter Property="TextColor" Value="#FF8FAB" />
                                            <!-- Rosa chicle -->
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Estado}" Value="Pedido_Pendiente">
                                            <Setter Property="Text" Value="Pendiente" />
                                            <Setter Property="TextColor" Value="#5C4033" />
                                            <!-- Marrón chocolate -->
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Estado}" Value="Pedido_Completado">
                                            <Setter Property="Text" Value="Entregado" />
                                            <Setter Property="TextColor" Value="Green" />
                                            <!-- Verde para Entregado, puedes usar un color de tu paleta si tienes uno adecuado -->
                                        </DataTrigger>
                                    </Label.Triggers>
                                    <!-- Si ningún Trigger coincide, el Label Text por defecto será el valor del Binding -->
                                    <Label.Text>
                                        <Binding Path="Estado"/>
                                    </Label.Text>
                                </Label>

                                <Label Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding DescripcionOferta}" TextColor="#7A5E48" MaxLines="2" LineBreakMode="TailTruncation"/>
                                <Label Grid.Row="2" Grid.Column="0" Text="{Binding EmpresaNombreNegocio, StringFormat='Ofrecido por: {0}'}" TextColor="#7A5E48"/>
                                <Label Grid.Row="2" Grid.Column="1" Text="{Binding Precio, StringFormat='{0:C}'}" TextColor="#5C4033" FontAttributes="Bold"/>

                                <!-- Información de Cliente para Empresas (visible condicionalmente) -->
                                <Label Grid.Row="3" Grid.Column="0" Text="{Binding ClienteRealizaNombre, StringFormat='Cliente: {0}'}" TextColor="#7A5E48" FontSize="12"
                                       IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MyOrdersViewModel}}, Path=IsCompanyUser}"/>
                                <Label Grid.Row="3" Grid.Column="1" Text="{Binding FechaPedido, StringFormat='Fecha Pedido: {0:d}'}" TextColor="#7A5E48" FontSize="12"
                                       IsVisible="{Binding FechaPedido}"/>

                                <!-- Botones de Acción -->
                                <HorizontalStackLayout Grid.Row="4" Grid.ColumnSpan="2" HorizontalOptions="End" Margin="0,10,0,0">
                                    <!-- Botón "Marcar como Entregado" para EMPRESAS: visible si es empresa y pedido pendiente -->
                                    <Button Text="Entregado"
                                            Style="{StaticResource ActionButtonStyle}"
                                            IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MyOrdersViewModel}}, Path=IsCompanyUser}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MyOrdersViewModel}}, Path=CompleteOrderCommand}"
                                            CommandParameter="{Binding .}"
                                            IsEnabled="{Binding Estado, Converter={StaticResource StringToBoolConverter}, ConverterParameter='Pedido_Pendiente'}"/>

                                    <!-- Botón "Valorar Pedido" para CLIENTES: visible si es cliente y pedido completado y no valorado -->
                                    <Button Text="Valorar"
                                            Style="{StaticResource ActionButtonStyle}"
                                            IsVisible="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MyOrdersViewModel}}, Path=IsClientUser}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MyOrdersViewModel}}, Path=ShowRateOrderFormCommand}"
                                            CommandParameter="{Binding .}"
                                            IsEnabled="{Binding Estado, Converter={StaticResource StringToBoolConverter}, ConverterParameter='Pedido_Completado'}" />
                                </HorizontalStackLayout>

                                <!-- Sección de Valoración (si el pedido ya está valorado) -->
                                <VerticalStackLayout Grid.Row="5" Grid.ColumnSpan="2" Spacing="2" Margin="0,10,0,0"
                                                     IsVisible="{Binding Puntuacion}">
                                    <Label Text="{Binding Puntuacion, StringFormat='Valoración: {0} / 5'}" FontAttributes="Bold" TextColor="#5C4033"/>
                                    <Label Text="{Binding Comentario}" TextColor="#7A5E48" IsVisible="{Binding Comentario, Converter={StaticResource StringIsNullOrEmptyConverter}, ConverterParameter='False'}"/>
                                </VerticalStackLayout>
                            </Grid>
                        </VerticalStackLayout>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- Mensaje si no hay pedidos/ofertas -->
        <Label Grid.Row="1"
                   Text="{Binding ErrorMessage}"
                   HorizontalOptions="Center"
                   VerticalOptions="Center"
                   TextColor="#7A5E48"
                   FontSize="Medium"
                   IsVisible="{Binding ErrorMessage, Converter={StaticResource StringIsNullOrEmptyConverter}, ConverterParameter='True'}" />

        <ActivityIndicator Grid.Row="2"
                               IsRunning="{Binding IsBusy}"
                               IsVisible="{Binding IsBusy}"
                               Color="#FF6F61"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"/>

        <Label Grid.Row="3"
                   Text="{Binding ErrorMessage}"
                   TextColor="Red"
                   HorizontalOptions="Center"
                   IsVisible="{Binding ErrorMessage, Converter={StaticResource StringIsNullOrEmptyConverter}, ConverterParameter='True'}" />
    </Grid>
</ContentPage>
